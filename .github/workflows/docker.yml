name: "docker"

on:
  issue_comment:
    types: [created]
  pull_request:
    types: [opened, synchronize, reopened]

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: "095356423315"

# these permissions are needed to interact with GitHub's OIDC Token endpoint
permissions:
  id-token: write
  contents: read

jobs:
  ecr-public:
    # only run on pull requests so long as they don't come from forks
    if: ( (github.event_name == 'pull_request') && (github.event.pull_request.head.repo.full_name == github.repository) ) || (github.event_name != 'pull_request')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/cptest-core-ue1-artifacts-ecr-public-github-action
          role-session-name: github-action-ci-docker-workflow
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr-public get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build, Test, and Push to Public ECR Registry
        uses: ./
        with:
          docker-registry: public.ecr.aws/p6x8r6t0/cloudposse
          run-tests: "true"
          subdirectory: ./test
          tests-script: ./test/test.sh

  ecr-private:
    # only run on pull requests so long as they don't come from forks
    if: ( (github.event_name == 'pull_request') && (github.event.pull_request.head.repo.full_name == github.repository) ) || (github.event_name != 'pull_request')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/cptest-core-ue1-artifacts-ecr-private-github-action
          role-session-name: github-action-ci-docker-workflow
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Test, and Push to Private ECR Registry
        uses: ./
        with:
          docker-registry: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/cloudposse
          run-tests: "true"
          subdirectory: ./test
          tests-script: ./test/test.sh
